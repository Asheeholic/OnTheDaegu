<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.otd.review.service.ReviewMapper">

	<!-- 리뷰 목록 -->
	<select id="reviewList" resultType="ReviewVO">
		select * from review order by review_no desc
	</select>
	
	<!-- 리뷰 단건조회 -->
	<select id="reviewSelect" resultType="ReviewVO">
		select * from review where review_no = #{reviewNo}
	</select>

	<insert id="reviewInsert" parameterType="ReviewVO">
		<selectKey keyProperty="email" resultType="ReviewVO" order="BEFORE">
	      <if test="email != ''">
	         select distinct email from history where email = #{email}
	      </if>
		</selectKey>
		insert into review(review_no, review_content, review_like, email, review_date) 
	   		values(r_seq.nextval, #{reviewContent}, #{reviewLike}, #{email}, sysdate)
	</insert>
	
	<!-- 
	위 insert문으로 구현한 SQL 원문
		IF (SELECT email FROM history WHERE email ='dmennithorp3@naver.com') THEN
			insert into review(review_no, review_content, review_like, email, review_date)
				values(r_seq.nextval, '내용', 3, 'dmennithorp3@naver.com', sysdate); END IF;
	-->
	
	<!-- 리뷰 수정: 내용과 별점 수정, 글번호 이용 -->
	<update id="reviewUpdate" parameterType="ReviewVO">
		update review set review_content = #{reviewContent}, review_like = #{reviewLike} where review_no = #{reviewNo}
	</update>
	
	<!-- 리뷰 삭제: 글번호 이용 -->
	<delete id="reviewDelete" parameterType="ReviewVO">
		delete from review where review_no = #{reviewNo}
	</delete>
	
	<!-- 페이징처리 -->
	<select id="getListPaging" resultType="ReviewVO">
		select * from (select /*+INDEX_DESC(review REVIEW_PK) */ rownum as rn, review.* from review where <![CDATA[rownum <= #{pageNum} * #{amount}]]>) where rn > (#{pageNum} -1) * #{amount}
	</select>
	
    <!-- 게시물 총 갯수 -->
    <select id="getTotal" resultType="int">
        select count(*) from review
    </select>		

</mapper>